apiVersion: v1
kind: Secret
metadata:
  labels:
    app: acmefit
    app.kubernetes.io/part-of: order-postgres
  name: order-postgres-pass
  namespace: my-apps
data:
  password: S2VlcEl0U2ltcGxlMSE=
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: order-postgres
  labels:
    app: acmefit
    service: order-db
    app.kubernetes.io/part-of: order-postgres
  namespace: my-apps
spec:
  ports:
  - port: 5432
    name: postgres-order
    protocol: TCP
  selector:
    app: acmefit
    service: order-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-postgres
  labels:
    app: acmefit
    service: order-db
    app.kubernetes.io/part-of: order-postgres
  namespace: my-apps
spec:
  selector:
    matchLabels:
      app: acmefit
      service: order-db
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: acmefit
        service: order-db
        app.kubernetes.io/part-of: order-postgres
    spec:
      containers:
      - name: postgres
        image: projects.registry.vmware.com/tanzu_meta_pocs/acme/postgres:9.5
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
          name: order-postgres
          protocol: TCP
        env:
        - name: POSTGRES_USER
          value: pgbench
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: order-postgres-pass
              key: password
        - name: PGBENCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: order-postgres-pass
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgredb
      volumes:
      - name: postgredb
        emptyDir: {}
